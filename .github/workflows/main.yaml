name: main

on:
  push:
    branches: [ new_ros2 ]
  pull_request:
    branches: [ new_ros2 ]

jobs:
  tii-deb-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros2_distro: [foxy, galactic]
    steps:

      - name: Checkout rplidar_ros2
        uses: actions/checkout@v2
        with:
          path: rplidar_ros2

      # Run docker build
      - name: Run rplidar_ros2 docker build
        env:
          ROS: 1
          ROS_DISTRO: ${{ matrix.ros2_distro }}
          PACKAGE_NAME: rplidar_ros2
        run: |
          set -eux
          mkdir bin
          pushd rplidar_ros2
          ./build.sh ../bin/
          popd

      - name: Install jfrog CLI tool
        env:
          JFROG_CLI_URL: https://ssrc.jfrog.io/artifactory/ssrc-gen-public-remote-cache/tools/jfrog/jfrog-1.45.2.tar.gz
        if: github.event_name == 'push'
        run: |
          set -exu
          mkdir -p "$GITHUB_WORKSPACE/.jfrog/bin"
          curl -L "$JFROG_CLI_URL" -o "$GITHUB_WORKSPACE/.jfrog/jfrog.tar.gz"
          tar -C "$GITHUB_WORKSPACE/.jfrog/bin" -zxf "$GITHUB_WORKSPACE/.jfrog/jfrog.tar.gz"
          echo "$GITHUB_WORKSPACE/.jfrog/bin" >> "$GITHUB_PATH"
          echo "JFROG_CLI_HOME_DIR=$GITHUB_WORKSPACE/.jfrog" >> "$GITHUB_ENV"

      - name: Upload to Artifactory
        env:
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
          ARTIFACTORY_REPO: debian-public-local
          DISTRIBUTION: focal
          COMPONENT: fog-sw
          ARCHITECTURE: amd64
          BUILD_NAME: rplidar_ros2
          CI: true
        if: github.event_name == 'push'
        run: |
          set -exu
          jfrog rt c import "$ARTIFACTORY_TOKEN"
          jfrog rt ping
          pkg=$(find bin -name 'ros-${{ matrix.ros2_distro }}-rplidar-ros2*.deb')
          jfrog rt u --deb "$DISTRIBUTION/$COMPONENT/$ARCHITECTURE" \
                     --target-props COMMIT="$GITHUB_SHA" \
                     --build-name "$BUILD_NAME" \
                     --build-number "$GITHUB_SHA" \
                     "$pkg" \
                     "$ARTIFACTORY_REPO"
          jfrog rt build-publish "$BUILD_NAME" "$GITHUB_SHA"
          jfrog rt bpr "$BUILD_NAME" "$GITHUB_SHA" "$ARTIFACTORY_REPO" \
                       --status dev \
                       --comment "development build"

      - name: trigger fog-drone build
        env:
          USER: ${{ secrets.DISPATCH_USER }}
          TOKEN: ${{ secrets.DISPATCH_TOKEN }}
        if: github.event_name == 'push'
        run: |
          curl -X POST https://api.github.com/repos/tiiuae/dronsole-containers/dispatches \
               -H 'Accept: application/vnd.github.everest-preview+json' \
               -u $USER:$TOKEN \
               --data '{"event_type": "rebuild-fog-drone", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'
